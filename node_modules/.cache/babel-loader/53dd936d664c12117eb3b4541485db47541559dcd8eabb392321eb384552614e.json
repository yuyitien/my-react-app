{"ast":null,"code":"import React,{useState}from\"react\";import Board from\"./Board\";// 匯入井字遊戲的棋盤元件\nimport\"./tictactoe.css\";// 匯入樣式表\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TicTacToe(){const[history,setHistory]=useState([Array(9).fill(null)]);// 使用 useState 鉤子設置狀態：歷史步驟陣列，初始狀態是包含 9 個空值的陣列\nconst[currentMove,setCurrentMove]=useState(0);// 使用 useState 鉤子設置狀態：目前的步驟索引，初始狀態是 0\nconst currentSquares=history[currentMove];// 從歷史步驟中取得當前的棋盤狀態陣列\nconst xIsNext=currentMove%2===0;// 判斷下一步是 X 還是 O，偶數步是 X，奇數步是 O\nconst handlePlay=nextSquares=>{const nextHistory=[...history.slice(0,currentMove+1),nextSquares];// 複製歷史步驟陣列並加入新的棋盤狀態陣列作為下一步\nsetHistory(nextHistory);// 更新歷史步驟陣列\nsetCurrentMove(nextHistory.length-1);// 設置目前步驟為最後一個步驟的索引\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"game-board\",children:[\" \",/*#__PURE__*/_jsx(Board,{xIsNext:xIsNext,squares:currentSquares,onPlay:handlePlay}),\" \"]})]});}export default TicTacToe;// 匯出井字遊戲主元件","map":{"version":3,"names":["React","useState","Board","jsx","_jsx","jsxs","_jsxs","TicTacToe","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","xIsNext","handlePlay","nextSquares","nextHistory","slice","length","className","children","squares","onPlay"],"sources":["C:/Users/owner/Desktop/my-react-app/src/components/tic-tac-toe/TicTacToe.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Board from \"./Board\"; // 匯入井字遊戲的棋盤元件\r\nimport \"./tictactoe.css\"; // 匯入樣式表\r\n\r\nfunction TicTacToe() {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]); // 使用 useState 鉤子設置狀態：歷史步驟陣列，初始狀態是包含 9 個空值的陣列\r\n  const [currentMove, setCurrentMove] = useState(0); // 使用 useState 鉤子設置狀態：目前的步驟索引，初始狀態是 0\r\n  const currentSquares = history[currentMove]; // 從歷史步驟中取得當前的棋盤狀態陣列\r\n  const xIsNext = currentMove % 2 === 0; // 判斷下一步是 X 還是 O，偶數步是 X，奇數步是 O\r\n\r\n  const handlePlay = (nextSquares) => {\r\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares]; // 複製歷史步驟陣列並加入新的棋盤狀態陣列作為下一步\r\n    setHistory(nextHistory); // 更新歷史步驟陣列\r\n    setCurrentMove(nextHistory.length - 1); // 設置目前步驟為最後一個步驟的索引\r\n  };\r\n  return (\r\n    <div className=\"game\"> {/* 遊戲主容器 */}\r\n      <div className=\"game-board\"> {/* 遊戲棋盤容器 */}\r\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} /> {/* 匯入棋盤元件並傳遞相關屬性 */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TicTacToe; // 匯出井字遊戲主元件\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,SAAS,CAAE;AAC7B,MAAO,iBAAiB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,SAASA,CAAA,CAAG,CACnB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAE;AAC/D,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAE;AACnD,KAAM,CAAAa,cAAc,CAAGN,OAAO,CAACI,WAAW,CAAC,CAAE;AAC7C,KAAM,CAAAG,OAAO,CAAGH,WAAW,CAAG,CAAC,GAAK,CAAC,CAAE;AAEvC,KAAM,CAAAI,UAAU,CAAIC,WAAW,EAAK,CAClC,KAAM,CAAAC,WAAW,CAAG,CAAC,GAAGV,OAAO,CAACW,KAAK,CAAC,CAAC,CAAEP,WAAW,CAAG,CAAC,CAAC,CAAEK,WAAW,CAAC,CAAE;AACzER,UAAU,CAACS,WAAW,CAAC,CAAE;AACzBL,cAAc,CAACK,WAAW,CAACE,MAAM,CAAG,CAAC,CAAC,CAAE;AAC1C,CAAC,CACD,mBACEd,KAAA,QAAKe,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAC,GAAC,cACrBhB,KAAA,QAAKe,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAC,GAAC,cAC3BlB,IAAA,CAACF,KAAK,EAACa,OAAO,CAAEA,OAAQ,CAACQ,OAAO,CAAET,cAAe,CAACU,MAAM,CAAER,UAAW,CAAE,CAAC,IAAC,EACtE,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAT,SAAS,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}