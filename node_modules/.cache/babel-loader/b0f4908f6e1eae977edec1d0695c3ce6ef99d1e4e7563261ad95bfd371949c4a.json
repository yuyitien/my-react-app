{"ast":null,"code":"import React,{useState}from\"react\";import MyDisplay from\"./MyDisplay\";// 導入顯示組件\nimport MyButton from\"./MyButton\";// 導入按鈕組件\nimport\"./MyCalculator.css\";// 導入自定義的 CSS 樣式表\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MyCalculator(){const[result,setResult]=useState(\"0\");// 使用狀態管理計算機的結果，初始值為 \"0\"\n// handleClick是MyButton的事件處理常式\nconst handleClick=value=>{// 处理数字和小数点的输入\nswitch(value){case\"0\":case\"1\":case\"2\":case\"3\":case\"4\":case\"5\":case\"6\":case\"7\":case\"8\":case\"9\":case\".\":case\"+\":case\"-\":case\"*\":case\"/\":// 如果当前结果为 \"0\"，直接替换为输入的值，否则在当前结果后追加输入的值\nif(result===\"0\"){setResult(value);}else{setResult(result+value);// 在当前结果后追加运算符\n}break;case\"=\":// 使用 eval() 方法计算当前表达式的值，并将结果转换为字符串更新状态\nsetResult(eval(result).toString());break;// 处理清除操作的输入\ncase\"c\":// 将结果重置为 \"0\"\nsetResult(\"\");break;// 处理正负号切换的输入\ncase\"+/-\":// 将当前结果转换为整数，并乘以 -1，然后转换为字符串更新状态\nsetResult(parseInt(result,10)*-1);break;// 处理百分号的输入\ncase\"%\":// 将当前结果转换为整数，并除以 100，然后转换为字符串更新状态\nsetResult(parseInt(result,10)/100);break;default:break;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"calculator\",children:[\" \",/*#__PURE__*/_jsx(MyDisplay,{result:result}),/*#__PURE__*/_jsx(MyButton,{buttonClicked:handleClick})]});}export default MyCalculator;","map":{"version":3,"names":["React","useState","MyDisplay","MyButton","jsx","_jsx","jsxs","_jsxs","MyCalculator","result","setResult","handleClick","value","eval","toString","parseInt","className","children","buttonClicked"],"sources":["C:/Users/owner/Desktop/my-react-app/src/components/MyCalculator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MyDisplay from \"./MyDisplay\"; // 導入顯示組件\r\nimport MyButton from \"./MyButton\"; // 導入按鈕組件\r\nimport \"./MyCalculator.css\"; // 導入自定義的 CSS 樣式表\r\n\r\nfunction MyCalculator() {\r\n  const [result, setResult] = useState(\"0\"); // 使用狀態管理計算機的結果，初始值為 \"0\"\r\n  // handleClick是MyButton的事件處理常式\r\n  const handleClick = (value) => {\r\n    // 处理数字和小数点的输入\r\n    switch (value) {\r\n      case \"0\":\r\n      case \"1\":\r\n      case \"2\":\r\n      case \"3\":\r\n      case \"4\":\r\n      case \"5\":\r\n      case \"6\":\r\n      case \"7\":\r\n      case \"8\":\r\n      case \"9\":\r\n      case \".\":\r\n      case \"+\":\r\n      case \"-\":\r\n      case \"*\":\r\n      case \"/\":\r\n        // 如果当前结果为 \"0\"，直接替换为输入的值，否则在当前结果后追加输入的值\r\n        if (result === \"0\") {\r\n          setResult(value);\r\n        } else {\r\n          setResult(result + value); // 在当前结果后追加运算符\r\n        }\r\n        break;\r\n      case \"=\":\r\n        // 使用 eval() 方法计算当前表达式的值，并将结果转换为字符串更新状态\r\n        setResult(eval(result).toString());\r\n        break;\r\n      // 处理清除操作的输入\r\n      case \"c\":\r\n        // 将结果重置为 \"0\"\r\n        setResult(\"\");\r\n        break;\r\n      // 处理正负号切换的输入\r\n      case \"+/-\":\r\n        // 将当前结果转换为整数，并乘以 -1，然后转换为字符串更新状态\r\n        setResult(parseInt(result, 10) * -1);\r\n        break;\r\n      // 处理百分号的输入\r\n      case \"%\":\r\n        // 将当前结果转换为整数，并除以 100，然后转换为字符串更新状态\r\n        setResult(parseInt(result, 10) / 100);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calculator\"> {/* 計算機主容器 */}\r\n      {/* 顯示組件，用於顯示計算結果，傳遞當前結果狀態作為 props */}\r\n      <MyDisplay result = {result} />\r\n      {/* 按鈕組件，傳遞點擊事件處理函式作為 buttonClicked props */}\r\n      <MyButton buttonClicked={handleClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyCalculator;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,aAAa,CAAE;AACrC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAE;AACnC,MAAO,oBAAoB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,QAAS,CAAAC,YAAYA,CAAA,CAAG,CACtB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,GAAG,CAAC,CAAE;AAC3C;AACA,KAAM,CAAAU,WAAW,CAAIC,KAAK,EAAK,CAC7B;AACA,OAAQA,KAAK,EACX,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACR,IAAK,GAAG,CACN;AACA,GAAIH,MAAM,GAAK,GAAG,CAAE,CAClBC,SAAS,CAACE,KAAK,CAAC,CAClB,CAAC,IAAM,CACLF,SAAS,CAACD,MAAM,CAAGG,KAAK,CAAC,CAAE;AAC7B,CACA,MACF,IAAK,GAAG,CACN;AACAF,SAAS,CAACG,IAAI,CAACJ,MAAM,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC,CAClC,MACF;AACA,IAAK,GAAG,CACN;AACAJ,SAAS,CAAC,EAAE,CAAC,CACb,MACF;AACA,IAAK,KAAK,CACR;AACAA,SAAS,CAACK,QAAQ,CAACN,MAAM,CAAE,EAAE,CAAC,CAAG,CAAC,CAAC,CAAC,CACpC,MACF;AACA,IAAK,GAAG,CACN;AACAC,SAAS,CAACK,QAAQ,CAACN,MAAM,CAAE,EAAE,CAAC,CAAG,GAAG,CAAC,CACrC,MACF,QACE,MACJ,CACF,CAAC,CACD,mBACEF,KAAA,QAAKS,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAC,GAAC,cAE3BZ,IAAA,CAACH,SAAS,EAACO,MAAM,CAAIA,MAAO,CAAE,CAAC,cAE/BJ,IAAA,CAACF,QAAQ,EAACe,aAAa,CAAEP,WAAY,CAAE,CAAC,EACrC,CAAC,CAEV,CAEA,cAAe,CAAAH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}